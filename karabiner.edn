{
 :profiles {
            :Default {
                      :default true
                      :sim 100
                      :delay 300
                      :alone 150
                      :held 40
                      }
            }
 :applications {:rdc ["^com\\.microsoft\\.rdc\\.macos"]}
 
 :main [{:des "Key Tab mode"
         :rules [
                ;; Put right ctrl in a more better place 
                ;; it gets really hard to type if this will be dropping keys a lot
                [:application :right_control]

                [:caps_lock [] nil {:alone :escape :held :left_control}]

                ;; get parens in easier reach
                [:left_shift nil nil {:held :left_shift :alone :!S9}]
                [:right_shift nil nil {:held :right_shift :alone :!S0}]

                ;; window-mode
                [[:tab :f] ["window-mode" 1] nil {:afterup [ "window-mode" 0 ]}]
                [:h "open -g 'rectangle://execute-action?name=left-half'" ["window-mode" 1]]
                [:j "open -g 'rectangle://execute-action?name=maximize'" ["window-mode" 1]]
                [:k "open -g 'rectangle://execute-action?name=maximize'" ["window-mode" 1]]
                [:l "open -g 'rectangle://execute-action?name=right-half'" ["window-mode" 1]]
                [:u :!Ttab ["window-mode" 1]]
                [:i :!TStab ["window-mode" 1]]
                [:o :!Ograve_accent_and_tilde ["window-mode" 1]]

                ;; app-mode
                [[:tab :r] ["app-mode" 1] nil {:afterup ["app-mode" 0]}]
                [:j "open -a 'Firefox Developer Edition.app'" ["app-mode" 1]]
                [:k "open -a Wezterm" ["app-mode" 1]]
                [:l "open -a 'Google Chrome.app'" ["app-mode" 1]]
                [:semicolon "open -a Finder" ["app-mode" 1]]
                [:u "open -a 'Microsoft Outlook.app'" ["app-mode" 1]]
                [:i "open -a 'Microsoft Teams'" ["app-mode" 1]]
                [:o "/bin/sh /Users/nikp/.config/karabiner_scripts/windows_app.sh" ["app-mode" 1]]
                [:p "open -a 'Perplexity.app'" ["app-mode" 1]]
                [:n "open -a 'Docker.app'" ["app-mode" 1]]

                ;; direction-mode
                [[:tab :d] ["direction-mode" 1] nil {:afterup ["direction-mode" 0]}]
                [:h :left_arrow ["direction-mode" 1]]
                [:j :down_arrow ["direction-mode" 1]]
                [:k :up_arrow ["direction-mode" 1]]
                [:l :right_arrow ["direction-mode" 1]]

                ;; Home Row Mods
                ;; [:f :left_shift :!rdc {:alone :f }]
                ;; [:d :left_option :!rdc {:alone :d }]
                ;; [:s :left_command :!rdc {:alone :s }]
                ;; [:a :left_control :!rdc {:alone :a }]
                ;; [:j :right_shift :!rdc {:alone :j }]
                ;; [:k :right_option :!rdc {:alone :k }]
                ;; [:l :right_command :!rdc {:alone :l }]
                ;; [:semicolon :right_control :!rdc {:alone :semicolon }]

                ;; Media controls for keyboards without explicit keys
                [:!Sf8 :mute ]
                [:!Sf9 :play_or_pause ]
                [:!Sf10 :volume_decrement]
                [:!Sf11 :volume_increment]
                [:!Sf12 :fast_forward]
                ]
         }]}

 ;; this is a little bit weird, but it's convenient
    ;; the rule [:!Ca :!T1]
    ;; means from command a to control 1
    ;; :!Ca is keycode :a and prefix a with !C

    ;; here's the definition

    ;; !  | means mandatory
    ;; #  | means optional
    ;; C  | left_command
    ;; T  | left_control
    ;; O  | left_option
    ;; S  | left_shift
    ;; F  | fn
    ;; Q  | right_command
    ;; W  | right_control
    ;; E  | right_option
    ;; R  | right_shift
    ;; P  | caps_lock
    ;; !! | mandatory command + control + optional + shift (hyper)
    ;; ## | optional any

    ;; examples

    ;; !CTSequal_sign  | mandatory command control shift =
    ;;                 | which is command control +
    ;; !O#Sright_arrow | mandatory option optional any right_arrow

    ;; karabiner definition of mandatory and optional
    ;; https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/from/modifiers/

    ;; rule [<from> <to>u
    ;; if simplified modifier is used in <to>, optional(#) definition will be
    ;; ignored.

;; <to> section
;; :a                        | normal key or predefined tos
;; :to-a                     | predefined tos
;; :!Ca                      | special modifier key
;; "ls"                      | shell command
;; [:a :b]                   | multiple normal key
;; ["vi-mode" 1]             | set variable, second element in vector isn't keyword
;; ["vi-mode" :a]            | shell command then insert a
;; [:launch-template "Mail"] | shell command then insert a
;; ["cd" "ls"]               | multiple shell command
;; [["vi-mode" 1] :a]        | set variable then insert a
;; [{...}]                   | fallback to `tos` definition

;; conflict
;; ["cd" "ls"]
;; set_variable to string or two shell_command
;; two shell_command cd & ls, cd && ls
;; ["cd" "ls"] | multiple shell command
;; [{:set ["variable name" "variable value"]}] | set variable's value to string (fallback to `tos` definition)

;; <other options> section
;; to_if_alone                                    | :alone
;; to_if_held_down                                | :held
;; to_after_key_up                                | :afterup
;; to_delayed_action                              | :delayed
;;   to_if_canceled                               |   :canceled
;;   to_if_invoked                                |   :invoked
;; parameters                                     | :params
;;   basic.to_if_alone_timeout_milliseconds       |   :alone
;;   basic.to_if_held_down_threshold_milliseconds |   :held
;;   basic.to_delayed_action_delay_milliseconds   |   :delay
;;   basic.simultaneous_threshold_milliseconds    |   :sim


;; Keycode Reference can be found here: 
;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/src/karabiner_configurator/keys_info.clj

;; This is a useful config for reference
;; https://github.com/tIsGoud/goku/blob/master/karabiner.edn
